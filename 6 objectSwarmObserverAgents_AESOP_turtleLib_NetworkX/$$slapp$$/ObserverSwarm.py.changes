--- ObserverSwarm.py	(original)
+++ ObserverSwarm.py	(refactored)
@@ -41,8 +41,8 @@
     def buildActions(self):
 
         global project
-        print "#### Project", project,"starting."
-        print
+        print("#### Project", project,"starting.")
+        print()
 
         observerActions=open(project+"/observerActions.txt")
         self.actionList=observerActions.read().split()
@@ -57,7 +57,7 @@
         def do1(address, nCycles, actionList):
             #global cycle
             common.cycle+=1 #the clock running
-            print "Time =%2d" % common.cycle
+            print("Time =%2d" % common.cycle)
             if common.cycle>nCycles:
                  insertElementNextPosition(actionList,"end")
         self.actionGroup1.do = do1 # do is a variable linking a method
@@ -86,9 +86,9 @@
     # run
     def run(self):
         #global cycle
-        print "Time =%2d" % common.cycle
+        print("Time =%2d" % common.cycle)
 
-        if self.nCycles==0: print "The # of required cycles is 0. "
+        if self.nCycles==0: print("The # of required cycles is 0. ")
         while not self.conclude and self.nCycles>0:
 
             localEventList=self.actionList[:]
@@ -130,7 +130,7 @@
                 if subStep == "end":
                     found=True
                     self.actionGroup3.do(self)
-                    raw_input("enter to conclude")
+                    input("enter to conclude")
                     # look at graphicDisplayGlobalVarAndFunctions.py (if it
                     # exists) in the folder of the project
                     try: gvf.closeNetworkXdisplay()
@@ -145,6 +145,6 @@
                     except: tmp=""
                     exec(tmp)
 
-                if not found: print "Warning: step %s not found in Observer" % subStep
+                if not found: print("Warning: step %s not found in Observer" % subStep)
 
         if self.modelSwarm.getFile() != "": self.modelSwarm.getFile().close()
